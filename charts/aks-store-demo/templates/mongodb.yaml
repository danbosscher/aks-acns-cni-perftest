{{- if eq .Values.useMongoDB true }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      containers:
      - name: mongodb
        {{- if .Values.imageRegistry }}
        image: {{ .Values.imageRegistry }}/{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}
        {{- else }}
        image: {{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}
        {{- end }}
        ports:
        - containerPort: 27017
        resources:
          limits:
            memory: 500Mi
            cpu: 200m
          requests:
            memory: 200Mi
            cpu: 50m
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        startupProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 30
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 6
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 6
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  type: ClusterIP
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: mongodb
{{- end }}