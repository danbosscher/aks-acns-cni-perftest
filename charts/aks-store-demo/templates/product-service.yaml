apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: product-service
        {{- if .Values.imageRegistry }}
        image: {{ .Values.imageRegistry }}/{{ .Values.productService.image.repository }}:{{ .Values.productService.image.tag }}
        {{- else }}
        image: {{ .Values.productService.image.repository }}:{{ .Values.productService.image.tag }}
        {{- end }}
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
          limits:
            cpu: 50m
            memory: 100Mi
        startupProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 3
          failureThreshold: 10
          timeoutSeconds: 3
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 3
          failureThreshold: 10
          timeoutSeconds: 3
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 3
          failureThreshold: 10
          timeoutSeconds: 3
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: product-service
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app: product-service