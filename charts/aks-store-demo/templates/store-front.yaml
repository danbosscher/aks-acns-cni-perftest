apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-front
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: store-front
  template:
    metadata:
      labels:
        app: store-front
    spec:
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: store-front
        {{- if .Values.imageRegistry }}
        image: {{ .Values.imageRegistry }}/{{ .Values.storeFront.image.repository }}:{{ .Values.storeFront.image.tag }}
        {{- else }}
        image: {{ .Values.storeFront.image.repository }}:{{ .Values.storeFront.image.tag }}
        {{- end }}
        ports:
        - containerPort: 8080
          name: store-front
        env:
        - name: VUE_APP_ORDER_SERVICE_URL
          value: "http://order-service:3000/"
        - name: VUE_APP_PRODUCT_SERVICE_URL
          value: "http://product-service:3002/"
        resources:
          requests:
            cpu: 1m
            memory: 200Mi
          limits:
            cpu: 200m
            memory: 512Mi
        startupProbe:
          httpGet:
            path: /
            port: 8080
          failureThreshold: 10
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          failureThreshold: 10
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          failureThreshold: 10
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: store-front
spec:
  type: {{ .Values.storeFront.serviceType }}
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: store-front